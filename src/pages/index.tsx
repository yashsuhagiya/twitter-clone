import Head from "next/head";
import { api, RouterOutputs } from "~/utils/api";
import { SignIn, SignInButton, useUser } from "@clerk/nextjs";
import { NextPage } from "next";

import dayjs from "dayjs";
import relativeaTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeaTime);

const CreatePostWizard = () => {

  const { user } = useUser();

  console.log(user);

  if(!user) return null;

  return (
  <div className="flex gap-3 w-full">
    <img src={user.profileImageUrl} alt="profile image" className="h-14 w-14 rounded-full" />
    <input placeholder="Type some emojis!" className="grow bg-transparent outline-none" />
  </div>
  );
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author} = props;
  return (
    <div key={post.id} className="p-4 border-b border-slate-400 flex gap-3">
      <img src={author.profileImageUrl} alt="profile image" className="h-14 w-14 rounded-full" />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300 font-bold">
          <span>{`@${author.username}`}</span> Â· <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>{post.content}</span>
      </div>
      
    </div>
  );
}

export default function Home() {
  
  const user = useUser();

  const {data, isLoading} = api.posts.getAll.useQuery();

  if(isLoading) return <div> Loading...</div>
  if(!data) return <div>Something went wrong!</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
       <div className="h-full w-full border-slate-400 md:max-w-2xl border-x">
         <div className="flex border-b border-slate-400 p-4">
          {!user.isSignedIn && (
          <div className="flex justify-center">
            <SignInButton />
            </div>
          )}
          {user.isSignedIn && <CreatePostWizard />}
       </div>
        <div className="flex flex-col">
          {[...data]?.map((fullpost) => (
            <PostView  {...fullpost} key={fullpost.post.id}/>
          ))}
            
        </div>
        </div>
      </main>
      <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
    </>
  );
}